name: Tag major version
# After creating a release with a semantic version, update the major version tag

on:
  release:
    types: [published]

jobs:
  tag:
    runs-on: ubuntu-22.04

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Throw error if the tag name doesn't equal the release name
        if: ${{ github.event.release.tag_name != github.event.release.name }}
        run: |
          echo "Tag name and release name must be the same"
          exit 1

      - name: Get major version of release
        id: version
        # Release name will be something like v1.2.3, and we want to get v1
        # We just remove everything after the first period
        # https://stackoverflow.com/questions/4168371/how-can-i-remove-all-text-after-a-character-in-bash
        run: |
          MAJOR=$(echo ${{ github.event.release.name }} | cut -f1 -d".")
          echo "major=$MAJOR" >> $GITHUB_OUTPUT

      - name: Delete old tag locally
        # If tag doesn't exist locally, we still want to exit without failing
        run: git tag -d ${{ steps.version.outputs.major }} | true

      - name: Delete old tag remotely
        # https://docs.github.com/en/rest/git/refs?apiVersion=2022-11-28#delete-a-reference
        # If tag doesn't exist remotely, we still want to exit without failing
        uses: octokit/request-action@v2.x
        with:
          route:
            'DELETE /repos/${{ github.repository_owner }}/${{ github.repository
            }}/git/refs/${{ steps.version.outputs.major }}'
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository }}
          conclusion: 'success'
          status: 'completed'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new tag for major version
        run:
          git tag -a ${{ steps.version.outputs.major }} -m "Major version ${{
          steps.version.outputs.major }}"

      - name: Push new tag remotely
        run: git push -u origin ${{ steps.version.outputs.major }}
