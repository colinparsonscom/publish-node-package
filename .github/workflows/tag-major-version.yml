name: Tag major version
# After creating a release with a semantic version, update the major version tag

on:
  release:
    types: [published]

jobs:
  tag:
    name: Tag

    runs-on: ubuntu-22.04

    permissions:
      contents: write

    defaults:
      run:
        shell: bash

    steps:
      - name: Throw an error if the tag name doesn't equal the release name
        if: ${{ github.event.release.tag_name != github.event.release.name }}
        run: |
          echo "Tag name (${{ github.event.release.tag_name }}) and release name (${{ github.event.release.name }}) must be the same"
          exit 1

      - name:
          Throw an error if the release name isn't semver in the format v1.2.3
        if: ${{ ! github.event.release.prerelease }}
        run: |
          if [[ ! ${{ github.event.release.name }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Release name (${{ github.event.release.name }}) must be semver, in the format v1.2.3"
            exit 1
          fi

      - name: Checkout
        if: ${{ ! github.event.release.prerelease }}
        uses: actions/checkout@v3

      - name: Set up git
        if: ${{ ! github.event.release.prerelease }}
        run: |
          git config user.email "tagmajorversionbot@example.com"
          git config user.name "Tag Major Version Bot"

      - name: Get the major version of the release
        if: ${{ ! github.event.release.prerelease }}
        id: version
        # Release name will be something like v1.2.3, and we want to get v1
        # We just remove everything after the first period
        # https://stackoverflow.com/questions/4168371/how-can-i-remove-all-text-after-a-character-in-bash
        run: |
          MAJOR=$(echo ${{ github.event.release.name }} | cut -f1 -d".")
          echo "major=$MAJOR" >> $GITHUB_OUTPUT

      - name: Delete the old tag locally
        if: ${{ ! github.event.release.prerelease }}
        # If tag doesn't exist locally, we still want to exit without failing
        run: git tag -d ${{ steps.version.outputs.major }} || true

      - name: Create a new tag for the major version
        if: ${{ ! github.event.release.prerelease }}
        run:
          git tag -a ${{ steps.version.outputs.major }} -m "Major version ${{
          steps.version.outputs.major }}"

      - name: Delete the old tag remotely
        if: ${{ ! github.event.release.prerelease }}
        # https://docs.github.com/en/rest/git/refs?apiVersion=2022-11-28#delete-a-reference
        # If tag doesn't exist remotely, we still want to exit without failing
        # Hence the || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          repos/${{ github.repository }}/git/refs/tags/${{ steps.version.outputs.major }} || true

      - name: Push a new tag remotely
        if: ${{ ! github.event.release.prerelease }}
        run: git push -u origin ${{ steps.version.outputs.major }}
